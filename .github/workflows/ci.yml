# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI
on:
  push:
    branches:
      - master
jobs:
  deploy:
    if: contains(github.event.head_commit.message, 'deploy')
    runs-on: ubuntu-latest
    # name: Node ${{ matrix.node }} on ${{ matrix.os }}
    # runs-on: ${{ matrix.os }}
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     os:
    #       - ubuntu-latest
    #       - windows-latest
    #       - macos-latest
    #     node:
    #       - 14
    #       - 16
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.1

      # - name: Get package global path
      #   id: global-global-path
      #   run: echo "::set-output name=dir::$(npm config get prefix)"

      - name: Cache Modules 📦
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.pnpm-store
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Packages 🔧
        run: npm i -g pnpm && pnpm i

      - name: Build 🔧
        run: npm run build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: dist # The folder the action should deploy.

      - name: Save File 🗄️
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  release:
    if: contains(github.event.head_commit.message, 'release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.1

      - name: Cache Modules 📦
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.pnpm-store
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Packages 🔧
        run: npm i -g pnpm && pnpm i

      - name: Publish to NPM 🚀
        uses: JS-DevTools/npm-publish@v1
        id: publish
        with:
          registry: https://npm.biglao.cn/
          access: public
          token: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Create Release 🚀
        # if: steps.publish.outputs.type != 'none'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.publish.outputs.version }}
          release_name: Release ${{ steps.publish.outputs.version }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      # - name: Create Release 🚀
      #   # if: steps.publish.outputs.type != 'none'
      #   uses: ncipollo/release-action@v1
      #   with:
      #     name: Release ${{ steps.publish.outputs.version }}
      #     body: ${{ github.event.head_commit.message }}
      #     tag: v${{ steps.publish.outputs.version }}
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     artifacts: ./dist/**/*
      #     removeArtifacts: true
      # - name: Create Release 🚀
      #   # if: steps.publish.outputs.type != 'none'
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     name: Release ${{ steps.publish.outputs.version }}
      #     body: ${{ github.event.head_commit.message }}
      #     tag_name: v${{ steps.publish.outputs.version }}
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     files: ./dist/**/*
